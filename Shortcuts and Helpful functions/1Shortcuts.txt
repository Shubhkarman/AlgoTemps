######FAST IO:-
ios::sync_with_stdio(0)
	OR
std::ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)

ALSO USE "\n" INSTEAD OF "cout<<endl"

###### FILE I/O
ifstream in;
in.open("input.txt");
ofstream out;
out.open("output.txt");
in>>
out<<
in.close();
out.close();

OR

This code will redirect standard IO stream to file IO stream: freopen("input.in","r",stdin); freopen("output.out","w",stdout); Use such code, you can read data from file directly with cin and cout.


#########Dynamic memory 2d converted 1d array:-
int* arr = new int[n*m];
node* hor = (node *)malloc(n*(m+1) * sizeof(node));

2d Vector:-
vector<vector<long> > ver;
ver.resize(2,vector<long>(100000,0));


###########ONLY TAKE TILL X-1... AFTER THAT IGNORE ALL TILL '\n' CHARACTER
cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');




########Multi Condition Compi Function:-
bool compi(node a,node b)
{
    if(a.val<b.val)
        return 1;
    else if(a.val==b.val)
        return a.indx < b.indx;
    else
        return 0;
}


########Printing with specific precision of DOUBLE
cout<<setprecision(10)<<ans<<endl;
OR
cout<<fixed<<setprecision(10)<<ans<<endl;	//adds zeros to complete precision


########To calculate SIZE of unspecified array
int arr[]={0,2,1,4};
int size= sizeof(arr)/sizeof(arr[0]);


########To get enitre line
getline(cin,str);
also works with ifstream in
getline(in,str);

